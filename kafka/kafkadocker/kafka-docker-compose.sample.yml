version: "3"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      
    networks:
      - kafkanet
   
      
  kafka:
    image: docker.io/bitnami/kafka:3.2
    hostname: kafka
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=INTERNAL://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9093,EXTERNAL://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL 
    depends_on:
      - zookeeper
    links:
      - "zookeeper:zookeeper"
    
    deploy:
      resources:
        limits:
          memory: 2G
      
    networks:
      - kafkanet

      
      
  kafka-connect:
    image: konectaargentinadev/debezium-connect:2.0-tlspatch
    #hostname: localhost
    ports:
      - "8083:8083"
    links:
      - "kafka:kafka"
      - "zookeeper:zookeeper"
    environment:
      - GROUP_ID=kafkaconnect
      - CONFIG_STORAGE_TOPIC=my-connect-configs
      - OFFSET_STORAGE_TOPIC=my-connect-offsets
      - ADVERTISED_HOST_NAME=NTBLENO60378
      - BOOTSTRAP_SERVERS=kafka:9092
      
    deploy:
      resources:
        limits:
          memory: 1G
      
    depends_on:
      - kafka
      - zookeeper
      
    networks:
      - kafkanet


networks:
  kafkanet:
    driver: bridge
    ipam:
     config:
       - subnet: 192.168.200.0/24

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
