services:
  rapi:
    container_name: rapi-api-ulises
    build:
      context: .
      dockerfile: Dockerfile
    image: moviedomfo/rapi-api
    ports:
      # - ${APP_PORT_EXT}:3050
      - 3021:3050
    environment:

      - APP_CLIENT_NAME=rapi API, int PORT ${APP_PORT}

    volumes:
      - /d/volumes/rapi/logs:/app/logs
      - /d/volumes/rapi/csv:/app/csv
    networks:
      net_eco:
        ipv4_address: 172.20.0.5
  # platon:
  #   image: moviedomfo/alleres-api
  #   container_name: alleres-api-platon
  #   ports:
  #     - 3026:3016
  #   environment:
  #     - APP_CLIENT_NAME="Platon comerce ${PORT}"
  #     # - PORT=3016
  #   volumes:
  #     - /d/volumes/Rapi/:/app/files
  #   networks:
  #     net_eco:
  #       ipv4_address: 172.20.0.4
  # socrates:
  #   image: moviedomfo/alleres-api
  #   container_name: alleres-api-socrates
  #   ports:
  #     - 3026:3016
  #   environment:
  #     - APP_CLIENT_NAME="socrates comerce ${PORT}"
  #     # - PORT=3016
  #   volumes:
  #     - /d/volumes/Rapi/:/app/files
  #   networks:
  #     net_eco:
  #       ipv4_address: 172.20.0.4

  # comerce-nginx:
  #   container_name: Rapi-nginx
  #   image: nginx:latest
  #   restart: always
  #   # build:
  #   #   context: ./nginx
  #   ports:
  #     - 6000:80
  #     - 443:443
  #   volumes:
  #     - /d/volumes/Rapi/nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - rapi
  #     - socrates
  #   networks:
  #     net_eco:
  #       ipv4_address: 172.20.0.5

  # networking for the Redis container
networks:
  net_eco:
    ipam:
      #driver: default
      config:
        - subnet: 172.20.0.0/16
